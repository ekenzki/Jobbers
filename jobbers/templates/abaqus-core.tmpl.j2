#!/usr/bin/env python
#-*- coding: utf-8 -*-

## Start by transferring the input to wherever the job is run
### TODO: BUG: SBCAST ignored by SLURM if used like this.
##SBCAST {{ answers.inputfile }} $SLURM_REMOTE_DIR
#SBATCH -J Trivial
import os
import sys
import subprocess
import shutil
import glob
import time
import re
from pwd import getpwnam

print(os.getenv("SLURM_JOB_ACCOUNT"))
print(os.getenv("SLURM_JOB_ID"))
print(os.getenv("SLURM_REMOTE_DIR"))
(a,b) = subprocess.Popen(["sbcast", "c2.inp", "/tmp/c2_2.inp"],
                 stdout=subprocess.STDOUT,)).communicate()

# jobname=os.getenv("SLURM_JOB_NAME")
# slurm_debug = os.getenv("SLURM_DEBUG")
# remote_cwd=os.getenv("SLURM_REMOTE_DIR")

# unset SLURM_GTIDS (Seems abaqus crashes when this is set)
if 'SLURM_GTIDS' in os.environ:
    os.unsetenv('SLURM_GTIDS')

# SHARED DIR (All nodes sees this data)
shared_dir = "/tmp/scratch/{}/{}".format(os.getenv("USER"),os.getenv("SLURM_JOB_ID"))
os.makedirs(shared_dir)

(stdoutdata, stderrdata) = subprocess.Popen(["file", "/tmp/c2.inp" ],
                                            stdout=subprocess.STDOUT,).communicate()

#(stdoutdata, stderrdata) = subprocess.Popen(["abq2017.1",
#                                             "job=c2",
#                                             "interactive",
#                                             "cpus=1"],
#                                            stdout=subprocess.STDOUT,).communicate()

print("From run:")
print(stdoutdata)
print(stderrdata)
